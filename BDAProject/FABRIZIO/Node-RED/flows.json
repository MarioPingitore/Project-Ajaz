[{"id":"5b646e53bd8a48a0","type":"tab","label":"Fast Flow","disabled":true,"info":""},{"id":"c8635c92.fdfac","type":"tab","label":"Slow Flow","disabled":false,"info":""},{"id":"667f596501226671","type":"subflow","name":"Get Weather Data","info":"","category":"","in":[{"x":60,"y":260,"wires":[{"id":"69015ddec11519bf"}]}],"out":[{"x":960,"y":260,"wires":[{"id":"bab5e875ac2e567e","port":0}]}],"env":[],"meta":{},"color":"#3FADB5","icon":"font-awesome/fa-sun-o"},{"id":"693a6810d82603aa","type":"subflow","name":"Get Sensor Data","info":"","category":"","in":[{"x":80,"y":140,"wires":[{"id":"ac6ef4fdf154249e"}]}],"out":[{"x":840,"y":280,"wires":[{"id":"395a55ee.8f989a","port":0}]},{"x":700,"y":360,"wires":[{"id":"f48ac0657c338f93","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","outputLabels":["DATA","ERRORS"]},{"id":"f18106c971c2a55a","type":"subflow","name":"Send to Kafka and fast dataset","info":"","category":"","in":[{"x":60,"y":400,"wires":[{"id":"b19ddae040fc34b1"},{"id":"397d9aa3c5dd3b21"}]}],"out":[],"env":[],"meta":{},"color":"#FFAAAA","icon":"font-awesome/fa-send-o"},{"id":"15632e7b.29bb52","type":"subflow","name":"Send to Kafka and slow dataset","info":"","category":"","in":[{"x":100,"y":320,"wires":[{"id":"26a9dab2.899976"},{"id":"642812ac.dbfe2c"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"32e43754.27dd78","type":"subflow","name":"Get Weather Data (Fast)","info":"","category":"","in":[{"x":120,"y":260,"wires":[{"id":"963abb4e.2fd3c8"}]}],"out":[{"x":1040,"y":260,"wires":[{"id":"811ee7ee.e29c98","port":0}]}],"env":[],"meta":{},"color":"#3FADB5","icon":"font-awesome/fa-sun-o"},{"id":"3190e316.7e4f7c","type":"subflow","name":"Get Sensor Data (Fast)","info":"","category":"","in":[{"x":120,"y":160,"wires":[{"id":"c46577e5.f25278"}]}],"out":[{"x":880,"y":300,"wires":[{"id":"4056f848.066bc8","port":0}]},{"x":560,"y":440,"wires":[{"id":"42b06c9c.3158c4","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"f7c7f49a.c46f68","type":"mqtt-broker","name":"mosquitto","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"4e3773b9.d2700c","type":"serial-port","serialport":"/dev/ttyACM0","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"1f96eeb1.8a8ba1","type":"mqtt-broker","name":"hivemq","broker":"broker.hivemq.com","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"caddc970.6d1b58","type":"position-config","name":"Catanzaro","isValide":"true","longitude":"0","latitude":"0","angleType":"deg","timeZoneOffset":"99","timeZoneDST":"0","stateTimeFormat":"3","stateDateFormat":"12"},{"id":"b6a3c1cdca2e0323","type":"serial-port","z":"693a6810d82603aa","serialport":"COM5","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"8c331a1e.1a2fe8","type":"Kafka Broker","z":"15632e7b.29bb52","name":"","hosts":[{"host":"192.168.43.204","port":9094}],"hostsEnvVar":"","connectTimeout":"100","requestTimeout":"30000","autoConnect":"true","idleConnection":"5","reconnectOnIdle":"true","maxAsyncRequests":"10","checkInterval":"10","selfSign":true,"usetls":false,"useCredentials":false},{"id":"6bccb1eb.b9ba8","type":"Kafka Broker","name":"broker1","hosts":[{"host":"192.168.43.204","port":9094}],"hostsEnvVar":"","connectTimeout":"100","requestTimeout":"30000","autoConnect":"true","idleConnection":"5","reconnectOnIdle":"true","maxAsyncRequests":"10","checkInterval":"10","selfSign":true,"usetls":false,"useCredentials":false},{"id":"8ffc28909556e32d","type":"http request","z":"667f596501226671","name":"Weather Data","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":560,"y":160,"wires":[["6413a79f7db433e7"]]},{"id":"69015ddec11519bf","type":"function","z":"667f596501226671","name":"Prepare OpenWeatherMap calls","func":"let apiKey = \"8567f24170a1db83757c5aa8bd1417cd\"\n// Geo coords for Cosenza\n// let latitude_cs = 39.31\n// let longitude_cs = 16.2502\n\nlet latitude = 38.8908\nlet longitude = 16.5987\nlet weather_url = \"https://api.openweathermap.org/data/2.5/weather?lat=\"+latitude\n            +\"&lon=\"+longitude+\"&units=metric&appid=\"+apiKey\n\nlet pollution_url = \"https://api.openweathermap.org/data/2.5/air_pollution?lat=\"+latitude\n            +\"&lon=\"+longitude+\"&units=metric&appid=\"+apiKey\nlet weather_msg = {};\nlet pollution_msg = {};\nweather_msg.url = weather_url;\npollution_msg.url = pollution_url;\nreturn [weather_msg, pollution_msg];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":260,"wires":[["8ffc28909556e32d"],["44e43f201285e6e6"]],"outputLabels":["WEATHER","POLLUTION"]},{"id":"44e43f201285e6e6","type":"http request","z":"667f596501226671","name":"Air pollution","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":550,"y":360,"wires":[["dd9c2becd8e227f8"]]},{"id":"6413a79f7db433e7","type":"function","z":"667f596501226671","name":"Filter","func":"//Transform a value that goes from 0° to 359° to a value that goes from 0° to 7.9°\nconst calculate_wind_dir = (wind_degrees) => parseFloat(Math.round(wind_degrees/45).toFixed(1))\nconst beaufort = (wind_speed) => Math.round(Math.pow(wind_speed/0.837, 0.6667))\nconst getRain = (rain) => rain['1h']\n\nlet wind = msg.payload.wind\nlet rain = msg.payload.rain\n\n\n\nlet weather_data = {\n    \"wind_speed\": wind != undefined ? wind.speed : 0.0,\n    \"wind_force\": wind != undefined ? beaufort(wind.speed) : 0.0,\n    \"wind_dir_degrees\": wind != undefined ? wind.deg : 0.0,\n    \"wind_dir\": wind != undefined ? calculate_wind_dir(wind.deg) : 0.0,\n    \"rain\": rain != undefined ? getRain(rain) : 0.0\n}\n\nmsg.payload = weather_data\n\nlet pollution_msg = flow.get(msg._msgid)\nif(pollution_msg === undefined){\n    flow.set(msg._msgid, true)\n}\nelse{\n    flow.set(msg._msgid, undefined)\n    msg.complete = true\n}\n\nreturn msg;\n\n\n\n    \n    ","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":710,"y":160,"wires":[["bab5e875ac2e567e"]]},{"id":"dd9c2becd8e227f8","type":"function","z":"667f596501226671","name":"Filter","func":"let comps = msg.payload.list[0].components\n\nlet pollution_data = {\n    \"pm2_5\": comps.pm2_5,\n    \"pm10\": comps.pm10\n}\nmsg.payload = pollution_data\n\nlet weather_msg = flow.get(msg._msgid)\nif(weather_msg === undefined){\n    flow.set(msg._msgid, true)\n}\nelse{\n    flow.set(msg._msgid, undefined)\n    msg.complete = true\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":710,"y":360,"wires":[["bab5e875ac2e567e"]]},{"id":"bab5e875ac2e567e","type":"function","z":"667f596501226671","name":"Join","func":"if(msg.complete){\n    //both messages have arrived\n    let other_msg = context.get(msg._msgid)\n    \n    let result = {}\n    \n    for(let key in other_msg){\n        result[key] = other_msg[key]\n    }\n    for(let key in msg.payload){\n        result[key] = msg.payload[key]\n    }\n    msg.payload = result;\n    return msg;\n}\nelse{\n    context.set(msg._msgid, msg.payload)\n    node.done()\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":850,"y":260,"wires":[[]],"icon":"node-red/join.svg"},{"id":"e52d3505c6c50e71","type":"serial in","z":"693a6810d82603aa","name":"Receive","serial":"4e3773b9.d2700c","x":280,"y":280,"wires":[["44fd79c.5855d88"]]},{"id":"69d5a4e5439b8837","type":"serial out","z":"693a6810d82603aa","name":"Send","serial":"4e3773b9.d2700c","x":310,"y":140,"wires":[]},{"id":"f48ac0657c338f93","type":"catch","z":"693a6810d82603aa","name":"","scope":["e52d3505c6c50e71","69d5a4e5439b8837","44fd79c.5855d88"],"uncaught":false,"x":470,"y":360,"wires":[[]]},{"id":"ac6ef4fdf154249e","type":"change","z":"693a6810d82603aa","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"s","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":175,"y":140,"wires":[["69d5a4e5439b8837"]],"l":false},{"id":"935984f7bf9227a5","type":"file","z":"f18106c971c2a55a","name":"Add row","filename":"dataset_veloce.csv","appendNewline":true,"createDir":true,"overwriteFile":"false","encoding":"none","x":820,"y":200,"wires":[["8a63aa8a.b81238"]]},{"id":"89b509e29a89caa7","type":"file in","z":"f18106c971c2a55a","name":"File exists?","filename":"dataset_veloce.csv","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":410,"y":200,"wires":[["f3c0616ce684d75b"]]},{"id":"9ce265c92243bf9a","type":"catch","z":"f18106c971c2a55a","name":"File doesn't exist","scope":["89b509e29a89caa7"],"uncaught":false,"x":100,"y":120,"wires":[["e71f85cb55f5bbec"]]},{"id":"e71f85cb55f5bbec","type":"function","z":"f18106c971c2a55a","name":"Set header","func":"msg.payload = \"timestamp,humidity,light,pm10,pm2_5,pressure,rain,\"+\n              \"temperature,wind_dir,wind_dir_degrees,\"+\n              \"wind_force,wind_speed\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":120,"wires":[["5756f91216a6aaa1"]]},{"id":"5756f91216a6aaa1","type":"file","z":"f18106c971c2a55a","name":"Create file","filename":"dataset_veloce.csv","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":430,"y":120,"wires":[["f163509946b1217b"]]},{"id":"f163509946b1217b","type":"change","z":"f18106c971c2a55a","name":"File ready","rules":[{"t":"set","p":"fileReady","pt":"flow","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":580,"y":120,"wires":[["20a9a0a5325ff26c"]],"icon":"font-awesome/fa-check"},{"id":"f3c0616ce684d75b","type":"change","z":"f18106c971c2a55a","name":"File ready","rules":[{"t":"set","p":"fileReady","pt":"flow","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":560,"y":200,"wires":[["20a9a0a5325ff26c"]],"icon":"font-awesome/fa-check"},{"id":"b19ddae040fc34b1","type":"change","z":"f18106c971c2a55a","name":"File not ready","rules":[{"t":"set","p":"fileReady","pt":"flow","to":"false","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":260,"y":280,"wires":[["89b509e29a89caa7","965a63b3f0d655a0"]],"icon":"font-awesome/fa-ban"},{"id":"20a9a0a5325ff26c","type":"function","z":"f18106c971c2a55a","name":"Join","func":"const reset = () => {\n    node.send([null, {payload: 'Stamo a resettà'}])\n    context.set('lasciapassare', undefined)\n    context.set('dati', undefined)\n}\n\nlet msg1 = {}\nif (flow.get('fileReady')){\n    /* È arrivato l'ok del fileReady.\n     * Se i dati sono pronti, possiamo inoltrarli,\n     * altrimenti salviamo il lasciapassare cosicchè\n     * appena i dati arrivano vengono inoltrati.\n     */\n    let dati = context.get('dati');\n    msg1.payload = {\n        'who':'fileready',\n        'dati': dati\n    }\n    node.send([null, msg1])\n     \n    if(dati === undefined){\n        context.set('lasciapassare', true);\n        node.done();\n    }\n    else{\n        // Abbiamo i dati, possiamo inoltrarli\n        reset();\n        msg.payload = dati;\n        node.send(msg);\n        node.done();\n    }\n     \n}\nelse{\n    /* Sono arrivati i dati. Se abbiamo il lasciapassare\n     * possiamo inoltrare i dati, altrimenti salviamo i dati\n     * e li inoltriamo quando abbiamo il lascia passare\n     */\n    \n    let lasciapassare = context.get('lasciapassare')\n    msg1.payload = {\n        'who':'dati',\n        'lasciapassare': lasciapassare\n    }\n    node.send([null, msg1])\n    if(lasciapassare === undefined){\n        context.set('dati', msg.payload)\n        node.done();\n    }\n    else{\n        // Abbiamo il lasciapassare. Possiamo inoltrare i dati\n        reset();\n        node.send(msg);\n        node.done();\n    }\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":705,"y":200,"wires":[["935984f7bf9227a5"],[]],"outputLabels":["","DEBUG"],"icon":"node-red/join.svg","l":false},{"id":"965a63b3f0d655a0","type":"template","z":"f18106c971c2a55a","name":"Prepare data","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{{payload.timestamp}},{{payload.humidity}},{{payload.light}},{{payload.pm10}},{{payload.pm2_5}},{{payload.pressure}},{{payload.rain}},{{payload.temperature}},{{payload.wind_dir}},{{payload.wind_dir_degrees}},{{payload.wind_force}},{{payload.wind_speed}}","output":"str","x":490,"y":280,"wires":[["20a9a0a5325ff26c"]]},{"id":"af338e1e9044be3f","type":"comment","z":"f18106c971c2a55a","name":"In the upper side of the flow we create and populate the dataset as soon as new data arrive","info":"","x":450,"y":60,"wires":[]},{"id":"0adac0592606bdab","type":"comment","z":"f18106c971c2a55a","name":"In the lower side, instead, we forward the data to Spark via Kafka","info":"","x":370,"y":440,"wires":[]},{"id":"397d9aa3c5dd3b21","type":"function","z":"f18106c971c2a55a","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":240,"y":520,"wires":[[]]},{"id":"4530e5e91072aa1e","type":"inject","z":"5b646e53bd8a48a0","name":"","props":[{"p":"payload"}],"repeat":"30","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":110,"y":140,"wires":[["b8dd4ce4585c5bcd","0eb65a5ed8d73669"]]},{"id":"6eddfb9cad86dbf7","type":"subflow:f18106c971c2a55a","z":"5b646e53bd8a48a0","name":"","env":[],"x":1020,"y":140,"wires":[]},{"id":"b8dd4ce4585c5bcd","type":"change","z":"5b646e53bd8a48a0","name":"","rules":[{"t":"delete","p":"weather_msg_fast","pt":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":235,"y":80,"wires":[["3bb16d3c.410772"]],"icon":"font-awesome/fa-eraser","l":false},{"id":"0eb65a5ed8d73669","type":"change","z":"5b646e53bd8a48a0","name":"","rules":[{"t":"delete","p":"sensor_msg_fast","pt":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":235,"y":200,"wires":[["974b7e92.138b2"]],"icon":"font-awesome/fa-eraser","l":false},{"id":"8a63aa8a.b81238","type":"exec","z":"f18106c971c2a55a","command":"rclone","addpay":"","append":"copy --update --verbose --transfers 30 --checkers 8 --contimeout 60s --timeout 300s --retries 3 --low-level-retries 10 --stats 1s \"/home/pi/dataset_veloce.csv\" \"GDrive Foobrizio:Big_Data_Analytics\"","useSpawn":"false","timer":"","oldrc":false,"name":"Rclone","x":960,"y":200,"wires":[["b3578530.b73c08"],["d927605d.ae53"],["58429065.0c3d7"]]},{"id":"b3578530.b73c08","type":"debug","z":"f18106c971c2a55a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1110,"y":160,"wires":[]},{"id":"d927605d.ae53","type":"debug","z":"f18106c971c2a55a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1110,"y":200,"wires":[]},{"id":"58429065.0c3d7","type":"debug","z":"f18106c971c2a55a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1110,"y":240,"wires":[]},{"id":"2b20ec52.6fbe54","type":"subflow:667f596501226671","z":"c8635c92.fdfac","name":"","env":[],"x":390,"y":100,"wires":[["4634c039.aedeb"]]},{"id":"fc8172f.53f299","type":"inject","z":"c8635c92.fdfac","name":"","props":[{"p":"payload"}],"repeat":"900","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":110,"y":160,"wires":[["955f2d91.c0122","5eb4e701.6beac8"]]},{"id":"a2379b0e.1cac68","type":"subflow:693a6810d82603aa","z":"c8635c92.fdfac","name":"","env":[],"x":390,"y":220,"wires":[["1a9dc3c8.45a09c","8b23e698.ca17a8"],[]]},{"id":"955f2d91.c0122","type":"change","z":"c8635c92.fdfac","name":"","rules":[{"t":"delete","p":"weather_msg_slow","pt":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":245,"y":100,"wires":[["2b20ec52.6fbe54"]],"icon":"font-awesome/fa-eraser","l":false},{"id":"5eb4e701.6beac8","type":"change","z":"c8635c92.fdfac","name":"","rules":[{"t":"delete","p":"sensor_msg_slow","pt":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":245,"y":220,"wires":[["a2379b0e.1cac68"]],"icon":"font-awesome/fa-eraser","l":false},{"id":"f4e36017.21a11","type":"file","z":"15632e7b.29bb52","name":"Add row","filename":"nuovo_dataset.csv","appendNewline":true,"createDir":true,"overwriteFile":"false","encoding":"none","x":820,"y":180,"wires":[["e5682e9c.5857a"]]},{"id":"18e4adae.81b2c2","type":"file in","z":"15632e7b.29bb52","name":"File exists?","filename":"nuovo_dataset.csv","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":410,"y":180,"wires":[["a2933f9f.45c39"]]},{"id":"c6fc0856.306bc8","type":"catch","z":"15632e7b.29bb52","name":"File doesn't exist","scope":["18e4adae.81b2c2"],"uncaught":false,"x":100,"y":100,"wires":[["a42302f4.d36d6"]]},{"id":"a42302f4.d36d6","type":"function","z":"15632e7b.29bb52","name":"Set header","func":"msg.payload = \"timestamp,humidity,light,pm10,pm2_5,pressure,rain,\"+\n              \"temperature,wind_dir,wind_dir_degrees,\"+\n              \"wind_force,wind_speed\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":100,"wires":[["b105d9a8.04bea8"]]},{"id":"b105d9a8.04bea8","type":"file","z":"15632e7b.29bb52","name":"Create file","filename":"nuovo_dataset.csv","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":430,"y":100,"wires":[["dce2fb93.ab71f8"]]},{"id":"dce2fb93.ab71f8","type":"change","z":"15632e7b.29bb52","name":"File ready","rules":[{"t":"set","p":"fileReady","pt":"flow","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":580,"y":100,"wires":[["a7b99847.5ec558"]],"icon":"font-awesome/fa-check"},{"id":"a2933f9f.45c39","type":"change","z":"15632e7b.29bb52","name":"File ready","rules":[{"t":"set","p":"fileReady","pt":"flow","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":560,"y":180,"wires":[["a7b99847.5ec558"]],"icon":"font-awesome/fa-check"},{"id":"26a9dab2.899976","type":"change","z":"15632e7b.29bb52","name":"File not ready","rules":[{"t":"set","p":"fileReady","pt":"flow","to":"false","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":260,"y":260,"wires":[["18e4adae.81b2c2","adf5ba5a.1d7a58"]],"icon":"font-awesome/fa-ban"},{"id":"a7b99847.5ec558","type":"function","z":"15632e7b.29bb52","name":"Join","func":"const reset = () => {\n    node.send([null, {payload: 'Stamo a resettà'}])\n    context.set('lasciapassare', undefined)\n    context.set('dati', undefined)\n}\n\nlet msg1 = {}\nif (flow.get('fileReady')){\n    /* È arrivato l'ok del fileReady.\n     * Se i dati sono pronti, possiamo inoltrarli,\n     * altrimenti salviamo il lasciapassare cosicchè\n     * appena i dati arrivano vengono inoltrati.\n     */\n    let dati = context.get('dati');\n    msg1.payload = {\n        'who':'fileready',\n        'dati': dati\n    }\n    node.send([null, msg1])\n     \n    if(dati === undefined){\n        context.set('lasciapassare', true);\n        node.done();\n    }\n    else{\n        // Abbiamo i dati, possiamo inoltrarli\n        reset();\n        msg.payload = dati;\n        node.send(msg);\n        node.done();\n    }\n     \n}\nelse{\n    /* Sono arrivati i dati. Se abbiamo il lasciapassare\n     * possiamo inoltrare i dati, altrimenti salviamo i dati\n     * e li inoltriamo quando abbiamo il lascia passare\n     */\n    \n    let lasciapassare = context.get('lasciapassare')\n    msg1.payload = {\n        'who':'dati',\n        'lasciapassare': lasciapassare\n    }\n    node.send([null, msg1])\n    if(lasciapassare === undefined){\n        context.set('dati', msg.payload)\n        node.done();\n    }\n    else{\n        // Abbiamo il lasciapassare. Possiamo inoltrare i dati\n        reset();\n        node.send(msg);\n        node.done();\n    }\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":705,"y":180,"wires":[["f4e36017.21a11"],[]],"outputLabels":["","DEBUG"],"icon":"node-red/join.svg","l":false},{"id":"adf5ba5a.1d7a58","type":"template","z":"15632e7b.29bb52","name":"Prepare data","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{{payload.timestamp}},{{payload.humidity}},{{payload.light}},{{payload.pm10}},{{payload.pm2_5}},{{payload.pressure}},{{payload.rain}},{{payload.temperature}},{{payload.wind_dir}},{{payload.wind_dir_degrees}},{{payload.wind_force}},{{payload.wind_speed}}","output":"str","x":490,"y":260,"wires":[["a7b99847.5ec558"]]},{"id":"eb6693c2.6a031","type":"comment","z":"15632e7b.29bb52","name":"In the upper side of the flow we create and populate the dataset as soon as new data arrive","info":"","x":450,"y":40,"wires":[]},{"id":"793c6e7f.e58cb","type":"comment","z":"15632e7b.29bb52","name":"In the lower side, instead, we forward the data to Spark via Kafka","info":"","x":410,"y":420,"wires":[]},{"id":"e5682e9c.5857a","type":"exec","z":"15632e7b.29bb52","command":"rclone","addpay":"","append":"copy --update --verbose --transfers 30 --checkers 8 --contimeout 60s --timeout 300s --retries 3 --low-level-retries 10 --stats 1s \"/home/pi/nuovo_dataset.csv\" \"GDrive Foobrizio:Big_Data_Analytics\"","useSpawn":"false","timer":"","oldrc":false,"name":"Rclone","x":960,"y":180,"wires":[["72a4f68b.996d78"],["da76a09b.99f04"],["5ec0bfec.c6ba8"]]},{"id":"72a4f68b.996d78","type":"debug","z":"15632e7b.29bb52","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1110,"y":140,"wires":[]},{"id":"da76a09b.99f04","type":"debug","z":"15632e7b.29bb52","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1110,"y":180,"wires":[]},{"id":"5ec0bfec.c6ba8","type":"debug","z":"15632e7b.29bb52","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1110,"y":220,"wires":[]},{"id":"6bb51fea.18bdc","type":"subflow:15632e7b.29bb52","z":"c8635c92.fdfac","name":"","env":[],"x":870,"y":160,"wires":[]},{"id":"33aacda4.da5762","type":"http request","z":"32e43754.27dd78","name":"Weather Data","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":640,"y":160,"wires":[["7da11abc.9e6734"]]},{"id":"963abb4e.2fd3c8","type":"function","z":"32e43754.27dd78","name":"Prepare OpenWeatherMap calls","func":"let apiKey = \"8567f24170a1db83757c5aa8bd1417cd\"\n// Geo coords for Cosenza\n// let latitude_cs = 39.31\n// let longitude_cs = 16.2502\n\nlet latitude = 38.8908\nlet longitude = 16.5987\nlet weather_url = \"https://api.openweathermap.org/data/2.5/weather?lat=\"+latitude\n            +\"&lon=\"+longitude+\"&units=metric&appid=\"+apiKey\n\nlet pollution_url = \"https://api.openweathermap.org/data/2.5/air_pollution?lat=\"+latitude\n            +\"&lon=\"+longitude+\"&units=metric&appid=\"+apiKey\nlet weather_msg = {};\nlet pollution_msg = {};\nweather_msg.url = weather_url;\npollution_msg.url = pollution_url;\nreturn [weather_msg, pollution_msg];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":260,"wires":[["33aacda4.da5762"],["b595b420.558a88"]],"outputLabels":["WEATHER","POLLUTION"]},{"id":"b595b420.558a88","type":"http request","z":"32e43754.27dd78","name":"Air pollution","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":630,"y":360,"wires":[["b8e1b88.6a14148"]]},{"id":"7da11abc.9e6734","type":"function","z":"32e43754.27dd78","name":"Filter","func":"//Transform a value that goes from 0° to 359° to a value that goes from 0° to 7.9°\nconst calculate_wind_dir = (wind_degrees) => parseFloat(Math.round(wind_degrees/45).toFixed(1))\nconst beaufort = (wind_speed) => Math.round(Math.pow(wind_speed/0.837, 0.6667))\nconst getRain = (rain) => rain['1h']\n\nlet wind = msg.payload.wind\nlet rain = msg.payload.rain\n\n\n\nlet weather_data = {\n    \"wind_speed\": wind != undefined ? wind.speed : 0.0,\n    \"wind_force\": wind != undefined ? beaufort(wind.speed) : 0.0,\n    \"wind_dir_degrees\": wind != undefined ? wind.deg : 0.0,\n    \"wind_dir\": wind != undefined ? calculate_wind_dir(wind.deg) : 0.0,\n    \"rain\": rain != undefined ? getRain(rain) : 0.0\n}\n\nmsg.payload = weather_data\n\nlet pollution_msg = flow.get(msg._msgid)\nif(pollution_msg === undefined){\n    flow.set(msg._msgid, true)\n}\nelse{\n    flow.set(msg._msgid, undefined)\n    msg.complete = true\n}\n\nreturn msg;\n\n\n\n    \n    ","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":160,"wires":[["811ee7ee.e29c98"]]},{"id":"b8e1b88.6a14148","type":"function","z":"32e43754.27dd78","name":"Filter","func":"let comps = msg.payload.list[0].components\n\nlet pollution_data = {\n    \"pm2_5\": comps.pm2_5,\n    \"pm10\": comps.pm10\n}\nmsg.payload = pollution_data\n\nlet weather_msg = flow.get(msg._msgid)\nif(weather_msg === undefined){\n    flow.set(msg._msgid, true)\n}\nelse{\n    flow.set(msg._msgid, undefined)\n    msg.complete = true\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":360,"wires":[["811ee7ee.e29c98"]]},{"id":"811ee7ee.e29c98","type":"function","z":"32e43754.27dd78","name":"Join","func":"if(msg.complete){\n    //both messages have arrived\n    let other_msg = context.get(msg._msgid)\n    \n    let result = {}\n    \n    for(let key in other_msg){\n        result[key] = other_msg[key]\n    }\n    for(let key in msg.payload){\n        result[key] = msg.payload[key]\n    }\n    msg.payload = result;\n    return msg;\n}\nelse{\n    context.set(msg._msgid, msg.payload)\n    node.done()\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":260,"wires":[[]],"icon":"node-red/join.svg"},{"id":"ea66b241.fce5d","type":"serial in","z":"3190e316.7e4f7c","name":"Receive","serial":"4e3773b9.d2700c","x":280,"y":300,"wires":[["f2f365c3.311588"]]},{"id":"7b043456.4fb27c","type":"serial out","z":"3190e316.7e4f7c","name":"Send","serial":"4e3773b9.d2700c","x":410,"y":160,"wires":[]},{"id":"42b06c9c.3158c4","type":"catch","z":"3190e316.7e4f7c","name":"","scope":["ea66b241.fce5d","7b043456.4fb27c","f2f365c3.311588"],"uncaught":false,"x":410,"y":440,"wires":[[]]},{"id":"c46577e5.f25278","type":"change","z":"3190e316.7e4f7c","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"f","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":275,"y":160,"wires":[["7b043456.4fb27c"]],"l":false},{"id":"3bb16d3c.410772","type":"subflow:32e43754.27dd78","z":"5b646e53bd8a48a0","name":"","env":[],"x":390,"y":80,"wires":[["a6c9ce52.772c5"]]},{"id":"974b7e92.138b2","type":"subflow:3190e316.7e4f7c","z":"5b646e53bd8a48a0","name":"","env":[],"x":400,"y":200,"wires":[["1eac6e6c.efbb52"],[]]},{"id":"395a55ee.8f989a","type":"change","z":"693a6810d82603aa","name":"","rules":[{"t":"delete","p":"payload.call","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":691.0990600585938,"y":283.117919921875,"wires":[[]],"l":false},{"id":"4056f848.066bc8","type":"change","z":"3190e316.7e4f7c","name":"","rules":[{"t":"delete","p":"payload.call","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":775,"y":300,"wires":[[]],"l":false},{"id":"f2f365c3.311588","type":"function","z":"3190e316.7e4f7c","name":"Parser","func":"let message = JSON.parse(msg.payload);\n\nif(message.call == 1)\n    return [{payload:message}, {payload:true}];\nreturn [null, msg]\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":495,"y":300,"wires":[["4056f848.066bc8"],[]],"icon":"font-awesome/fa-filter","l":false},{"id":"4634c039.aedeb","type":"change","z":"c8635c92.fdfac","name":"","rules":[{"t":"set","p":"payload.who","pt":"msg","to":"weather","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":555,"y":100,"wires":[["9a047a27.d82668"]],"icon":"font-awesome/fa-plus","l":false},{"id":"1a9dc3c8.45a09c","type":"change","z":"c8635c92.fdfac","name":"","rules":[{"t":"set","p":"payload.who","pt":"msg","to":"sensor","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":555,"y":220,"wires":[["9a047a27.d82668"]],"icon":"font-awesome/fa-plus","l":false},{"id":"a6c9ce52.772c5","type":"change","z":"5b646e53bd8a48a0","name":"","rules":[{"t":"set","p":"payload.who","pt":"msg","to":"weather","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":575,"y":80,"wires":[["4993bbe4.a2fc14"]],"icon":"font-awesome/fa-plus","l":false},{"id":"1eac6e6c.efbb52","type":"change","z":"5b646e53bd8a48a0","name":"","rules":[{"t":"set","p":"payload.who","pt":"msg","to":"sensor","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":575,"y":200,"wires":[["4993bbe4.a2fc14"]],"icon":"font-awesome/fa-plus","l":false},{"id":"4993bbe4.a2fc14","type":"function","z":"5b646e53bd8a48a0","name":"Join","func":"let who = msg.payload.who;\n\n\nconst clearData = () => {\n    flow.set('weather_msg_fast', undefined);\n    flow.set('sensor_msg_fast', undefined);\n}\n\n\nconst mergePayloads = (sensor_msg, weather_msg) => {\n    let result = {}\n    for (let key in sensor_msg) {\n      if(key !== \"who\" && sensor_msg.hasOwnProperty(key)){\n        result[key] = sensor_msg[key];\n      }\n    }\n\n    for (let key in weather_msg) {\n      if(key !== \"who\" && weather_msg.hasOwnProperty(key)){\n        result[key] = weather_msg[key];\n      }\n    }\n    result.timestamp = Date.now();\n    return result;\n}\n\n\n\n//Abbiamo appena ricevuto i dati del meteo\nif(who === 'weather'){\n    let sensor_msg = flow.get('sensor_msg_fast');\n    if(sensor_msg !== undefined){\n        /* I dati del sensore sono già arrivati, quindi possiamo \n         * procedere con l'inoltro dei dati\n         */\n        msg.payload = mergePayloads(sensor_msg, msg.payload)\n        clearData();\n        let len = Object.keys(msg.payload).length;\n        if(len === 12)\n            node.send([msg, {payload: true}]);\n        else node.send([null, {payload: len}])\n    }\n    else{\n        /* I dati del sensore non sono ancora arrivati. Salviamo il\n         * meteo in una variabile locale\n         */\n        node.send([null, {payload:'weather_arrived'}])\n        flow.set('weather_msg_fast', msg.payload)\n        node.done()\n    }\n}\n//Abbiamo appena ricevuto i dati dell'Arduino\nelse if(who === 'sensor'){\n    let weather_msg = flow.get('weather_msg_fast');\n    if(weather_msg !== undefined){\n        /* I dati del meteo sono già arrivati, quindi possiamo \n         * procedere con l'inoltro dei dati\n         */\n        msg.payload = mergePayloads(msg.payload, weather_msg);\n        clearData();\n        let len = Object.keys(msg.payload).length;\n        if(len === 12)\n            node.send([msg, {payload: true}]);\n        else node.send([null, {payload: len}])\n    }\n    else{\n        /* I dati del meteo non sono ancora arrivati. Salviamo\n         * i dati dei sensori in una variabile locale\n         */\n        node.send([null, {payload:'sensor_arrived'}])\n        flow.set('sensor_msg_fast', msg.payload)\n        node.done()\n    }\n}\nelse{\n    /**\n     * Questo else teoricamente non si verifica mai\n     */\n    node.send([null, {payload:'anomalia'}])\n    clearData();\n    node.done()\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":655,"y":140,"wires":[["6eddfb9cad86dbf7"],[]],"outputLabels":["RESULT","DEBUG"],"icon":"node-red/join.svg","l":false},{"id":"9a047a27.d82668","type":"function","z":"c8635c92.fdfac","name":"Join","func":"let who = msg.payload.who;\n\n\nconst clearData = () => {\n    flow.set('weather_msg_slow', undefined);\n    flow.set('sensor_msg_slow', undefined);\n}\n\n\nconst mergePayloads = (sensor_msg, weather_msg) => {\n    let result = {}\n    for (let key in sensor_msg) {\n      if(key !== 'who' && sensor_msg.hasOwnProperty(key)){\n        result[key] = sensor_msg[key];\n      }\n    }\n\n    for (let key in weather_msg) {\n      if(key !== 'who' && weather_msg.hasOwnProperty(key)){\n        result[key] = weather_msg[key];\n      }\n    }\n    result.timestamp = Date.now();\n    return result;\n}\n\n\n\n//Abbiamo appena ricevuto i dati del meteo\nif(who === 'weather'){\n    let sensor_msg = flow.get('sensor_msg_slow');\n    if(sensor_msg !== undefined){\n        /* I dati del sensore sono già arrivati, quindi possiamo \n         * procedere con l'inoltro dei dati\n         */\n        msg.payload = mergePayloads(sensor_msg, msg.payload)\n        clearData();\n        let len = Object.keys(msg.payload).length;\n        if(len === 12)\n            node.send([msg, {payload: true}]);\n        else node.send([null, {payload: len}])\n    }\n    else{\n        /* I dati del sensore non sono ancora arrivati. Salviamo il\n         * meteo in una variabile locale\n         */\n        flow.set('weather_msg_slow', msg.payload)\n        node.done()\n    }\n}\n//Abbiamo appena ricevuto i dati dell'Arduino\nelse if(who === 'sensor'){\n    let weather_msg = flow.get('weather_msg_slow');\n    if(weather_msg !== undefined){\n        /* I dati del meteo sono già arrivati, quindi possiamo \n         * procedere con l'inoltro dei dati\n         */\n        msg.payload = mergePayloads(msg.payload, weather_msg);\n        clearData();\n        let len = Object.keys(msg.payload).length;\n        if(len === 12)\n            node.send([msg, {payload: true}]);\n        else node.send([null, {payload: len}])\n    }\n    else{\n        /* I dati del meteo non sono ancora arrivati. Salviamo\n         * i dati dei sensori in una variabile locale\n         */\n        flow.set('sensor_msg_slow', msg.payload)\n        node.done()\n    }\n}\nelse{\n    /**\n     * Questo else teoricamente non si verifica mai\n     */\n    node.send([null, {payload:'anomalia'}])\n    clearData();\n    node.done()\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":635,"y":160,"wires":[["6bb51fea.18bdc"],[]],"outputLabels":["RESULT","DEBUG"],"icon":"node-red/join.svg","l":false},{"id":"427739b3.2ee398","type":"debug","z":"5b646e53bd8a48a0","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":830,"y":400,"wires":[]},{"id":"d227af67.8bfc1","type":"catch","z":"5b646e53bd8a48a0","name":"","scope":["4993bbe4.a2fc14"],"uncaught":false,"x":650,"y":400,"wires":[["427739b3.2ee398"]]},{"id":"44fd79c.5855d88","type":"function","z":"693a6810d82603aa","name":"Parser","func":"let message = JSON.parse(msg.payload);\n\nif(message.call == 0)\n    return [{payload:message}, {payload:true}];\nreturn [null, msg]\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":455,"y":280,"wires":[["395a55ee.8f989a"],[]],"icon":"font-awesome/fa-filter","l":false},{"id":"bde282c6.61dc1","type":"mqtt out","z":"c8635c92.fdfac","name":"","topic":"tokafka","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"f7c7f49a.c46f68","x":460,"y":440,"wires":[]},{"id":"57dbe38c.96bacc","type":"inject","z":"c8635c92.fdfac","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":290,"y":400,"wires":[["bde282c6.61dc1","291808c5.b3fc78"]]},{"id":"642812ac.dbfe2c","type":"function","z":"15632e7b.29bb52","name":"Fail simulator","func":"const mode = \"exam\";\n\n\n\nlet res = Math.floor(Math.random() * 12);\nif(mode === \"exam\"){\n    if (res % 2 == 0)\n\t    msg.payload.temperature = null;\n    else \n\t    msg.payload.temperature = null;\n}\n\nelse{\n    if(res === 0)\n        msg.payload.timestamp = null;\n    else if(res === 1)\n        msg.payload.humidity = null;\n    else if(res === 2)\n        msg.payload.light = null;\n    else if(res === 3)\n        msg.payload.pm10 = null;\n    else if(res === 4)\n        msg.payload.pm2_5 = null;\n    else if(res === 5)\n        msg.payload.pressure = null;\n    else if(res === 6)\n        msg.payload.rain = null;\n    else if(res === 7)\n        msg.payload.temperature = null;\n    else if(res === 8)\n        msg.payload.wind_dir = null;\n    else if(res === 9)\n        msg.payload.wind_dir_degrees = null;\n    else if(res === 10)\n        msg.payload.wind_force = null;\n    else \n        msg.payload.wind_speed = null;\n}\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":260,"y":500,"wires":[["d2a9a37d.20d82","aadbf0d7.ba462"]]},{"id":"d2a9a37d.20d82","type":"Kafka Producer","z":"15632e7b.29bb52","name":"To Kafka server","broker":"8c331a1e.1a2fe8","topic":"RaspTest","topicSlash2dot":false,"requireAcks":1,"ackTimeoutMs":100,"partitionerType":0,"key":"","partition":0,"attributes":0,"connectionType":"Producer","convertFromJson":false,"x":460,"y":500,"wires":[]},{"id":"291808c5.b3fc78","type":"Kafka Producer","z":"c8635c92.fdfac","name":"To Kafka server","broker":"6bccb1eb.b9ba8","topic":"RaspTest","topicSlash2dot":false,"requireAcks":1,"ackTimeoutMs":100,"partitionerType":0,"key":"","partition":0,"attributes":0,"connectionType":"Producer","convertFromJson":false,"x":600,"y":360,"wires":[]},{"id":"aadbf0d7.ba462","type":"debug","z":"15632e7b.29bb52","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":450,"y":580,"wires":[]},{"id":"8b23e698.ca17a8","type":"debug","z":"c8635c92.fdfac","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":600,"y":160,"wires":[]}]
